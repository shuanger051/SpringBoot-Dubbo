server:
  port: 9011

spring:
  #配置数据库连接
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/mydb?characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  #dubbo 参数配置
  dubbo:
    application:
     name: dubbo-provider
     registry: zookeeper://127.0.0.1:2181

  #rabbitMQ 参数配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    #消息确认配置项
    #确认消息已发送到交换机(Exchange)
    publisher-confirms: true
    #确认消息已发送到队列(Queue)
    publisher-returns: true

  #Quartz配置
  quartz:
    job-store-type: jdbc
    #配置的作业是否应覆盖现有的作业定义
    overwrite-existing-jobs: false
    # 计划程序的名称
    scheduler-name: quartzScheduler
    #初始化完成后启动计划程序的延迟时间，默认为 0 秒
    startup-delay: 10s
    #关闭时是否等待正在运行的作业完成
    wait-for-jobs-to-complete-on-shutdown: true
    #对于 Quartz 自带的配置，即可以使用 quartz 自己的 quartz.properties 配置文件进行配置，也可以直接配置在 properties 属性下，它是一个 map
    #quartz 完整配置：https://wangmaoxiong.blog.csdn.net/article/details/105057405#quartz.properties%20%E4%B8%8E%20QuartzProperties%20%E9%85%8D%E7%BD%AE%E9%80%89%E9%A1%B9
    properties:
      org:
        quartz:
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 15
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true

#配置mybatis
mybatis:
  mapper-locations: classpath:/mapper/*Mapper.xml
  type-aliases-package: com.dubbo.provider.dao


# 日志
logging:
  config: classpath:logback-spring.xml
